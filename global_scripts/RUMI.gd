extends CanvasLayer

# ü•≤ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏–ª—ã–π, –Ω–æ —Ä–∞–∑–¥—Ä–∞–∂–∞—é—â–∏–π –º–∏—Ä UI —á–µ—Ä–µ–∑ RUMI ü•≤
# –≠—Ç–æ—Ç —Å–∏–Ω–≥–ª—Ç–æ–Ω —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ UI-—Ä–µ–≥–∏–æ–Ω–∞–º–∏, —á—Ç–æ–±—ã —Ç—ã –±–æ–ª—å—à–µ –Ω–µ —Ç—Ä–∞—Ç–∏–ª –≤—Ä–µ–º—è
# –Ω–∞ —Å–∫—Ä—ã—Ç–∏–µ –∏ –ø–æ–∫–∞–∑ UI –≤—Ä—É—á–Ω—É—é. –ù–∞–¥–µ—é—Å—å, —ç—Ç–æ —Å–ø–∞—Å—ë—Ç —Ç–µ–±—è –æ—Ç UI-–∞–¥–∞.

@export var default_region: String = "Main_menu"

var current_region: Node = null
var overlay_region: Node = null


@onready var UI_Help = UI_Helper.new()

var regions: Dictionary = {}

func init(Main_Node: Node):
	for child in Main_Node.get_children():
		regions[child.name] = child
		child.visible = false
	
	# –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —Ä–µ–≥–∏–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–∏ –º–æ–ª–∏–º—Å—è, —á—Ç–æ–±—ã –æ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª)
	if regions.has(default_region):
		switch_to_region(default_region)
	else:
		Logger.log_err("–†–µ–≥–∏–æ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é '%s' –Ω–µ –Ω–∞–π–¥–µ–Ω!" % default_region, self)
	Logger.log_say("–û—Ö, –æ–ø—è—Ç—å —Ä–∞–±–æ—Ç–∞ —Å UI", self)

# params: –°–ª–æ–≤–∞—Ä—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ on_show() –Ω–æ–≤–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞
@rpc("any_peer","call_local","reliable")
func switch_to_region(region_name: String, params: Dictionary = {},):
	#await UIAnimator.play(self, "fade_in", 1)
	
	if current_region:
		current_region.visible = false
		if current_region.has_method("on_hide"):
			current_region.on_hide()
	
	if regions.has(region_name):
		current_region = regions[region_name]
		current_region.visible = true
		if current_region.has_method("on_show"):
			if current_region.get_method_argument_count("on_show") > 0:
				current_region.on_show(params)
			else:
				current_region.on_show()
	else:
		Logger.log_err("–†–µ–≥–∏–æ–Ω '%s' –Ω–µ –Ω–∞–π–¥–µ–Ω! –ú–æ–∂–µ—Ç, –¥–æ–±–∞–≤–∏—à—å –µ–≥–æ?" % region_name, self)


func overlay_ui(region_name: String, params: Dictionary = {}):
	if overlay_region:
		Logger.log_warn("–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π overlay '%s'. –°–Ω–∞—á–∞–ª–∞ —É–±–µ—Ä–∏ –µ–≥–æ! üò§" % overlay_region.name, self)
		return
	
	if regions.has(region_name):
		overlay_region = regions[region_name]
		overlay_region.visible = true
		overlay_region.set_layer(self.get_layer() + 1)  # –ü–æ–≤—ã—à–∞–µ–º layer
		if overlay_region.has_method("on_show"):
			if overlay_region.get_method_argument_count("on_show") > 0:
				overlay_region.on_show(params)
			else:
				overlay_region.on_show()
		Logger.log_warn("–î–æ–±–∞–≤–∏–ª–∞ –Ω–∞–ª–æ–∂–µ–Ω–∏–µ '%s'. –ù–µ—É–∂–µ–ª–∏ —Ç–µ–±–µ –º–∞–ª–æ –æ–¥–Ω–æ–≥–æ UI? üò©" % region_name, self)
	else:
		Logger.log_err("–†–µ–≥–∏–æ–Ω '%s' –¥–ª—è –Ω–∞–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –¢—ã —Ç–æ—á–Ω–æ –≤—Å—ë —Å–¥–µ–ª–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ? üòï" % region_name, self)


func hide_overlay_ui():
	if overlay_region:
		if overlay_region.has_method("on_hide"):
			overlay_region.on_hide()
			UI_Help.set_focus_to_first_button(current_region)
		overlay_region.visible = false
		
		overlay_region.set_layer(self.get_layer())
		Logger.log_say("–£–±—Ä–∞–ª–∞ overlay '%s'. –ù–∞–¥–µ—é—Å—å, –±–æ–ª—å—à–µ –æ–Ω –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è. ü´†" % overlay_region.name, self)
		overlay_region = null
	else:
		Logger.log_warn("–ù–∏–∫–∞–∫–æ–≥–æ overlay –Ω–µ—Ç! –ó–∞—á–µ–º —Ç—ã —ç—Ç–æ –≤—ã–∑—ã–≤–∞–µ—à—å? ü§®", self)


func has_active_overlay() -> bool:
	return overlay_region != null

# üõ† –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# 1. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Ä–µ–≥–∏–æ–Ω "Lobby_UI" –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:
#    RUMI.switch_to_region("Lobby_UI")
#
# 2. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ "Settings" –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
#    RUMI.switch_to_region("Settings", {"volume": 50, "lang": "ru"})
#
# 3. –ï—Å–ª–∏ —Ç—ã –¥–æ–±–∞–≤–∏–ª –Ω–æ–≤—ã–π —Ä–µ–≥–∏–æ–Ω, —É–±–µ–¥–∏—Å—å, —á—Ç–æ –µ–≥–æ –∏–º—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∏–º–µ–Ω–∏ —É–∑–ª–∞!

# üç¨ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–ª—é—à–∫–∏:
# - –î–æ–±–∞–≤—å –∫ —Å–≤–æ–∏–º —Ä–µ–≥–∏–æ–Ω–∞–º –º–µ—Ç–æ–¥—ã `on_show(params)` –∏ `on_hide()`:
#   - `on_show(params)` –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–≥–∏–æ–Ω–∞, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å
#     —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –ª–æ–≥–∏–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.
#   - `on_hide()` –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Å–∫—Ä—ã—Ç–∏–∏ —Ä–µ–≥–∏–æ–Ω–∞, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
#     –∏–ª–∏ –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –Ω–µ–Ω—É–∂–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã.
#
# - –ï—Å–ª–∏ —Ç—ã –∑–∞–±—ã–≤–∞–µ—à—å –¥–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–≥–∏–æ–Ω—ã, RUMI –±—É–¥–µ—Ç –Ω–∞ —Ç–µ–±—è –∂–∞–ª–æ–≤–∞—Ç—å—Å—è. 
#   –ù–æ —Ä–∞–∑–≤–µ —Ç—ã –º–æ–∂–µ—à—å –µ—ë –≤–∏–Ω–∏—Ç—å? –û–Ω–∞ –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—Ç –ø–æ—Ä—è–¥–æ–∫. üòå
