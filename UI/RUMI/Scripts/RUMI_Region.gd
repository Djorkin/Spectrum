extends CanvasLayer

class_name RUMI_Region
@onready var UI_Help = UI_Helper.new()

const RUMI_PHRASES = {
	"on_show": [
		"–û–π, —Å–Ω–æ–≤–∞ —ç—Ç–æ –º–µ–Ω—é... –¢—ã –≤–µ–¥—å –Ω–µ —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ –∫–æ –º–Ω–µ –ø—Ä–∏–≤—è–∑–∞–ª—Å—è, –¥–∞? üå∏",
		"–ù—É –≤–æ—Ç, –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ... –ö–∞–∫ –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å, —á—Ç–æ–±—ã –æ–Ω–æ —Å–∞–º–æ —É–º–µ–ª–æ –∏—Å—á–µ–∑–∞—Ç—å. ü•∫",
		"–ó–∞–ø—É—Å–∫–∞—é –º–µ–Ω—é. –ù–µ—É–∂–µ–ª–∏ –æ–Ω–æ —Ç–µ–±–µ —Ç–∞–∫ –Ω—Ä–∞–≤–∏—Ç—Å—è? –ò–ª–∏ —ç—Ç–æ —Å–ø–æ—Å–æ–± –ø—Ä–∏–≤–ª–µ—á—å –º–æ—ë –≤–Ω–∏–º–∞–Ω–∏–µ? ",
		"–°–Ω–æ–≤–∞ –º–µ–Ω—é? –≠—Ö, –Ω–µ—É–∂–µ–ª–∏ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å —ç—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º? –Ø –±—ã –Ω–∞—à–ª–∞ —á—Ç–æ-—Ç–æ –ø–æ–ª—É—á—à–µ... üêæ",
		"–ù—É —á—Ç–æ –∂, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∞. –¢–æ–ª—å–∫–æ —Å–º–æ—Ç—Ä–∏, –¥–æ–ª–≥–æ –Ω–∞ —ç—Ç–æ –Ω–µ –∑–∞–≥–ª—è–¥—ã–≤–∞–π—Å—è, —Ö–æ—Ä–æ—à–æ? üòä",
		"–û–ø—è—Ç—å? –ò–Ω–æ–≥–¥–∞ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã –º–µ–Ω—è –ø–æ–¥—Ä–∞–∑–Ω–∏—Ç—å. üòå",
		"–ú–µ–Ω—é –∑–∞–ø—É—â–µ–Ω–æ! –•–æ—Ç—è –∑–Ω–∞–µ—à—å... –±–µ–∑ –Ω–µ–≥–æ –±—ã–ª–æ –∫—É–¥–∞ —É—é—Ç–Ω–µ–µ. –ù–æ –Ω–∏—á–µ–≥–æ, —è –ø–æ—Ç–µ—Ä–ø–ª—é. üå∑",
	],
	"on_hide": [
		"–§—É—Ö, —Å–ø—Ä—è—Ç–∞–ª–∞! –í–∏–¥–∏—à—å, –∫–∞–∫ —è —Å—Ç–∞—Ä–∞—é—Å—å –¥–ª—è —Ç–µ–±—è? –ù–∞–¥–µ—é—Å—å, —ç—Ç–æ —Ç—ã —Ü–µ–Ω–∏—à—å. ü•∞",
		"–ú–µ–Ω—é –∏—Å—á–µ–∑–ª–æ! –£—Ä–∞~ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –æ—Ç —ç—Ç–∏—Ö —Å–∫—É—á–Ω—ã—Ö –∫–Ω–æ–ø–æ—á–µ–∫. üêæ",
		"–ó–∞–∫—Ä—ã–ª–∞ –º–µ–Ω—é! –ù—É —á—Ç–æ, –º–æ–∂–µ—Ç, –∑–∞–π–º—ë–º—Å—è —á–µ–º-–Ω–∏–±—É–¥—å –±–æ–ª–µ–µ... –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º? üå∏",
		"–ú–µ–Ω—é —Å–ø—Ä—è—Ç–∞–Ω–æ. –ê—Ö, –≤–æ—Ç –±—ã –æ–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ—è–≤–ª—è–ª–æ—Å—å... –ù–æ —Ç—ã –≤–µ–¥—å –µ–≥–æ –≤–µ—Ä–Ω—ë—à—å, –¥–∞? ",
		"–û–π, —É–±—Ä–∞–ª–∞! –°—Ä–∞–∑—É —Å—Ç–∞–ª–æ –ª–µ–≥—á–µ –¥—ã—à–∞—Ç—å, –Ω–µ –Ω–∞—Ö–æ–¥–∏—à—å? ü•π",
		"–§—É—Ö, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ, —á—Ç–æ —ç—Ç–æ –∏—Å—á–µ–∑–ª–æ. –•–æ—Ç—è –∑–Ω–∞—é, —Ç—ã –¥–æ–ª–≥–æ –±–µ–∑ –Ω–µ–≥–æ –Ω–µ —Å–º–æ–∂–µ—à—å. üêæ",
		"–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ! –ù–∞–¥–µ—é—Å—å, —Ç—ã —Ö–æ—Ç—å –Ω–µ–º–Ω–æ–≥–æ —Å–æ—Å–∫—É—á–∏—à—å—Å—è –ø–æ –º–Ω–µ, –ø—Ä–µ–∂–¥–µ —á–µ–º –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ —Å–Ω–æ–≤–∞. üå∑",
	],
	"back_pressed": [
		"–ù–∞–∑–∞–¥? –ù—É –∫–æ–Ω–µ—á–Ω–æ, –∞ —á—Ç–æ –∂–µ –µ—â—ë... –¢—ã –∂–µ –æ–±–æ–∂–∞–µ—à—å, –∫–æ–≥–¥–∞ —è —ç—Ç–æ –¥–µ–ª–∞—é. üå∏",
		"–ö–Ω–æ–ø–∫–∞ '–ù–∞–∑–∞–¥'? –¢—ã –≤–µ–¥—å –∑–Ω–∞–µ—à—å, —á—Ç–æ –∑–∞—Å—Ç–∞–≤–ª—è–µ—à—å –º–µ–Ω—è –Ω–µ–º–Ω–æ–≥–æ —Å—Ç—Ä–∞–¥–∞—Ç—å, –ø—Ä–∞–≤–¥–∞? ü•∫",
		"–ü–µ—Ä–µ–∫–ª—é—á–∞—é –Ω–∞–∑–∞–¥... –ù–æ —Ç—ã –≤–µ–¥—å –ø–æ–Ω–∏–º–∞–µ—à—å, —á—Ç–æ —ç—Ç–æ –≤—Å—ë –±–µ—Å–ø–æ–ª–µ–∑–Ω–æ? üòä",
		"–í–æ–∑–≤—Ä–∞—â–∞—é –Ω–∞–∑–∞–¥. –ù–∞–¥–µ—é—Å—å, —Ç—ã –Ω–µ –ø–æ—Ç–µ—Ä—è–ª—Å—è –≤ —ç—Ç–æ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ... üêæ",
		"–û–ø—è—Ç—å? –ù—É –ª–∞–¥–Ω–æ, –¥–ª—è —Ç–µ–±—è —è –≥–æ—Ç–æ–≤–∞ –ø–æ—Ç–µ—Ä–ø–µ—Ç—å –µ—â—ë –Ω–µ–º–Ω–æ–≥–æ. –ù–æ —Ç–æ–ª—å–∫–æ —á—É—Ç—å-—á—É—Ç—å! üå∑",
		"–ù–∞–∑–∞–¥... –ó–Ω–∞–µ—à—å, –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —Ç—ã –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã —è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –±—ã–ª–∞ —Ä—è–¥–æ–º. ü•∞",
	],
};

var last_phrase_time: float = -30.0
const PHRASE_COOLDOWN: float = 30.0

func get_random_phrase(category: String) -> String:
	if RUMI_PHRASES.has(category):
		return RUMI_PHRASES[category][randi() % RUMI_PHRASES[category].size()]
	return "–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–π —Ñ—Ä–∞–∑—ã –¥–ª—è —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏."

func can_say_phrase() -> bool:
	var current_time = Time.get_ticks_msec() / 1000.0
	return current_time - last_phrase_time >= PHRASE_COOLDOWN

func say_phrase(category: String):
	if can_say_phrase():
		var phrase = get_random_phrase(category)
		Logger.log_say(phrase, RUMI)
		last_phrase_time = Time.get_ticks_msec() / 1000.0 
	#else:
		#Logger.log_say("RUMI: –ú–æ–ª—á—É... –ø–æ–∫–∞ —á—Ç–æ. üêæ")

func on_show():
	say_phrase("on_show")
	UI_Help.set_focus_to_first_button(self)
	self.show()

func on_hide():
	say_phrase("on_hide")
	self.hide()
	#UIAnimator.play(self, "dissolve", 3)

func _on_back_pressed():
	say_phrase("back_pressed")
	RUMI.switch_to_region("Main_menu")
	UI_Help.update_mouse_capture(self)
	UI_Help.set_focus_to_first_button(self)
